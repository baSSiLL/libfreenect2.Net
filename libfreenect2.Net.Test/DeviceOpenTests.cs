using FluentAssertions;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace libfreenect2Net.Test
{
    [TestClass]
    public class DeviceOpenTests : TestClassWithContext
    {
        public TestContext TestContext { get; set; }

        protected int DeviceCount { get; set; }
        protected bool AreAnyDevices => DeviceCount > 0;

        [TestInitialize]
        public void EnumerateDevices()
        {
            DeviceCount = Context.EnumerateDevices();
            TestContext.WriteLine("Enumerated {0} devices", DeviceCount);
        }

        [TestMethod]
        public void ShouldReturnSameInstanceOnSequentialOpen()
        {
            using (var device1 = Context.OpenDefaultDevice())
            using (var device2 = Context.OpenDefaultDevice())
            {
                device2.Should().BeSameAs(device1);
            }

            if (AreAnyDevices)
            {
                using (var device1 = Context.OpenDevice(0))
                using (var device2 = Context.OpenDevice(0))
                {
                    device2.Should().BeSameAs(device1);
                }

                var serial = Context.GetDeviceSerialNumber(0);
                using (var device1 = Context.OpenDevice(serial))
                using (var device2 = Context.OpenDevice(serial))
                {
                    device2.Should().BeSameAs(device1);
                }
            }
        }

        [TestMethod]
        public void ShouldReturnSerialForAllEnumeratedDevices()
        {
            for (var i = 0; i < DeviceCount; i++)
            {
                var serial = Context.GetDeviceSerialNumber(i);
                serial.Should().NotBeNullOrEmpty("Current device index = {0}", i);
            }
        }

        [TestMethod]
        public void ShouldReturnSameInstanceOnOpenByIndexAndSerial()
        {
            if (AreAnyDevices)
            {
                var serial = Context.GetDeviceSerialNumber(0);
                using (var device1 = Context.OpenDevice(0))
                using (var device2 = Context.OpenDevice(serial))
                {
                    device2.Should().BeSameAs(device1);
                }
            }
        }

        [TestMethod]
        public void ShouldOpenAllEnumeratedDevices()
        {
            for (var i = 0; i < DeviceCount; i++)
            {
                using (var device = Context.OpenDevice(i))
                {
                    device.Should().NotBeNull("Current device index={0}", i);
                }
            }
        }

        [TestMethod]
        public void SerialOfOpenDeviceShouldMatchOpenArgument()
        {
            if (AreAnyDevices)
            {
                var serial = Context.GetDeviceSerialNumber(0);
                using (var device = Context.OpenDevice(0))
                {
                    device.SerialNumber.Should().Be(serial);
                }
            }
        }
    }
}
